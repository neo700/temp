{"version":3,"sources":["App.js","registerServiceWorker.js","components/Login.js","components/Register.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","logout","localStorage","removeItem","window","location","reload","state","books","_this2","axios","defaults","headers","common","getItem","get","then","res","setState","data","console","log","catch","error","response","status","history","push","react_default","a","createElement","class","onClick","map","book","title","author","Component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","Login","onChange","e","target","name","value","onSubmit","preventDefault","_this$state","username","password","post","result","setItem","token","message","_this$state2","role","for","type","placeholder","required","Link","to","Register","ReactDOM","render","BrowserRouter","Route","exact","path","component","document","getElementById","URL","process","origin","addEventListener","concat","fetch","indexOf","ready","unregister","checkValidServiceWorker","event","request","url","registerServiceWorker"],"mappings":"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","file":"static/js/main.708ad920.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      books: []\n    };\n  }\n\n  componentDidMount() {\n    axios.defaults.headers.common['Authorization'] = localStorage.getItem('jwtToken');\n    axios.get('/api/book')\n      .then(res => {\n        this.setState({ books: res.data });\n        console.log(this.state.books);\n      })\n      .catch((error) => {\n        if (error.response.status === 401) {\n          console.log(\"xadasa\")\n          this.props.history.push(\"/login\");\n        }\n      });\n  }\n\n logout = () => {\n   localStorage.removeItem('jwtToken')\n   window.location.reload();\n }\n\n\n  render() {\n    return (\n      <div class=\"container\">\n        <div class=\"panel panel-default\">\n          <div class=\"panel-heading\">\n            <h3 class=\"panel-title\">\n              BOOK CATALOG &nbsp;\n              {localStorage.getItem('jwtToken') &&\n                <button class=\"btn btn-primary\" onClick={this.logout}>\n                  Logout\n              </button>\n              }\n            </h3>\n\n          </div>\n          <div class=\"panel-body\">\n            <table class=\"table table-stripe\">\n              <thead>\n                <tr>\n                  <th>Title</th>\n                  <th>Author</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.books.map(book =>\n                  <tr>\n                    <td>{book.title}</td>\n                    <td>{book.author}</td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n\n    window.addEventListener('fetch', (event) => {\n      if ( event.request.url.match( '^.*(\\/api\\/).*$' ) ) {\n        return false;\n      }\n    });\n    \n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\n\nclass Login extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            username: '',\n            password: '',\n            message: ''\n        };\n    }\n    onChange = (e) => {\n        const state = this.state\n        state[e.target.name] = e.target.value;\n        this.setState(state);\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n\n        const { username, password } = this.state;\n\n        axios.post('/api/auth/login', { username, password })\n            .then((result) => {\n                localStorage.setItem('jwtToken', result.data.token);\n                this.setState({ message: '' });\n                this.props.history.push('/')\n            })\n            .catch((error) => {\n                if (error.response.status === 401) {\n                    console.log('awwww')\n                    this.setState({ message: 'Login failed. Username or password not match' });\n                }\n            });\n    }\n\n    render() {\n        const { username, password, message } = this.state;\n        return (\n            <div class=\"container\">\n                <form class=\"form-signin\" onSubmit={this.onSubmit}>\n                    {message !== '' &&\n                        <div class=\"alert alert-warning alert-dismissible\" role=\"alert\">\n                            {message}\n                        </div>\n                    }\n                    <h2 class=\"form-signin-heading\">Please sign in</h2>\n                    <label for=\"inputEmail\" class=\"sr-only\">Email address</label>\n                    <input type=\"email\" class=\"form-control\" placeholder=\"Email address\" name=\"username\" value={username} onChange={this.onChange} required />\n                    <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n                    <input type=\"password\" class=\"form-control\" placeholder=\"Password\" name=\"password\" value={password} onChange={this.onChange} required />\n                    <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Login</button>\n                    <p>\n                        Not a member?\n                        <Link to=\"/register\">Register</Link>\n                    </p>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass Register extends Component{\n    constructor(){\n        super();\n        this.state = {\n            username: '',\n            password: ''\n        };\n    }\n    onChange = (e) => {\n        const state = this.state\n        state[e.target.name] = e.target.value;\n        this.setState(state);\n    }\n    onSubmit = (e) => {\n        e.preventDefault();\n        const { username, password } = this.state;\n\n        axios.post('/api/auth/register', { username, password })\n            .then(() => {\n                this.props.history.push('/login')\n            });\n    }\n    render() {\n        const { username, password } = this.state;\n        return (\n            <div class=\"container\">\n                <form class=\"form-signin\" onSubmit={this.onSubmit}>\n                    <h2 class=\"form-signin-heading\">Please Register</h2>\n                    <label for=\"inputEmail\" class=\"sr-only\">Email address</label>\n                    <input type=\"email\" class=\"form-control\" placeholder=\"Email address\" name=\"username\" value={username} onChange={this.onChange} required />\n                    <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n                    <input type=\"password\" class=\"form-control\" placeholder=\"Password\" name=\"password\" value={password} onChange={this.onChange} required />\n                    <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Register</button>\n                </form>\n            </div>\n        );\n    }\n\n}\n\nexport default Register;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport Login from './components/Login';\nimport Register from './components/Register';\n\nReactDOM.render(\n    <Router>\n        <div>\n            <Route exact path='/' component={App} />\n            <Route path='/login' component={Login} />\n            <Route path='/register' component={Register} />\n        </div>\n    </Router>,\n    document.getElementById('root')\n);\nregisterServiceWorker();"],"sourceRoot":""}